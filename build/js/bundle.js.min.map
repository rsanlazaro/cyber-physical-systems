{"version":3,"sources":["app.js"],"names":["displayStudents","degrees","fetch","then","res","json","data","obj","forEach","element","includes","degree","graduated","studentsGrid","document","querySelector","imagen","createElement","innerHTML","name","split","join","programme","co_advisor","graduation","appendChild","classList","remove","replace","add","displayResearchers","res2","data2","obj2","element2","researchersList","list","university","addEventListener","map","L","setView","tileLayer","attribution","addTo","marker"],"mappings":"AAcA,SAAAA,kBACAC,QAAA,CAAA,MAAA,SAAA,iBACAC,MAAA,mBACAC,KAAAC,GAAAA,EAAAC,QACAF,KAAAG,GAAAC,IAAAD,GACAH,KAAA,KACAI,IAAAC,QAAAC,IACA,GAAAR,QAAAS,SAAAD,EAAAE,UAAAF,EAAAG,UAAA,CACA,MAAAC,EAAAC,SAAAC,cACA,sBAAAN,EAAAE,QAEAK,EAAAF,SAAAG,cAAA,OACAD,EAAAE,UAAA,mGAEAT,EAAAU,KACAC,MAAA,KACAC,KACA,qMAIAZ,EAAAU,wCACAV,EAAAa,mCACAb,EAAAc,oCACAd,EAAAe,+CAGAX,EAAAY,YAAAT,GACAH,EAAAa,UAAAC,OAAA,iBAGApB,IAAAC,QAAAC,IACA,GAAAR,QAAAS,SAAAD,EAAAE,SAAAF,EAAAG,UAAA,CACA,MAAAC,EAAAC,SAAAC,cACA,sBAAAN,EAAAE,oBAEAK,EAAAF,SAAAG,cAAA,OACAD,EAAAE,UAAA,mGAEAT,EAAAU,KACAC,MAAA,KACAC,KAAA,IACAO,QACA,KACA,qMAIAnB,EAAAU,wCACAV,EAAAa,mCACAb,EAAAc,oCACAd,EAAAe,+CAGAX,EAAAY,YAAAT,GACAF,SAAAC,cACA,sBAAAN,EAAAE,oBAEAe,UAAAG,IAAA,UACAhB,EAAAa,UAAAC,OAAA,mBAOA,SAAAG,qBACA5B,MAAA,sBACAC,KAAA4B,GAAAA,EAAA1B,QACAF,KAAA6B,GAAAC,KAAAD,GACA7B,KAAA,KACA8B,KAAAzB,QAAA0B,IACA,MAAAC,EAAArB,SAAAC,cAAA,uBACAqB,EAAAtB,SAAAG,cAAA,KACAmB,EAAAlB,UAAA,sBACAgB,EAAAf,kBAAAe,EAAAG,yBAEAF,EAAAV,YAAAW,OA3FAtB,SAAAwB,iBAAA,oBAAA,WACA,IAAAC,EAAAC,EAAAD,IAAA,OAAAE,QAAA,CAAA,WAAA,YAAA,IAEAD,EAAAE,UAAA,qDAAA,CACAC,YACA,4FACAC,MAAAL,GAEAC,EAAAK,OAAA,CAAA,WAAA,aAAAD,MAAAL,MAGAvC,kBACA8B","file":"bundle.js","sourcesContent":["document.addEventListener(\"DOMContentLoaded\", function () {\r\n  var map = L.map(\"map\").setView([20.737011, -103.452432], 11);\r\n\r\n  L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\r\n    attribution:\r\n      '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\r\n  }).addTo(map);\r\n\r\n  L.marker([20.737011, -103.452432]).addTo(map);\r\n});\r\n\r\ndisplayStudents();\r\ndisplayResearchers();\r\n\r\nfunction displayStudents() {\r\n  degrees = [\"phd\", \"master\", \"undergraduate\"];\r\n  fetch(\"./students.json\")\r\n    .then((res) => res.json())\r\n    .then((data) => (obj = data))\r\n    .then(() => {\r\n      obj.forEach((element) => {\r\n        if (degrees.includes(element.degree) && !element.graduated) {\r\n          const studentsGrid = document.querySelector(\r\n            \".accordion-student-\" + element.degree\r\n          );\r\n          const imagen = document.createElement(\"div\");\r\n          imagen.innerHTML = `\r\n            <div class=\"imagen\">\r\n                <img loading=\"lazy\" src=\"build/img/students/${element.name\r\n                  .split(\" \")\r\n                  .join(\r\n                    \"\"\r\n                  )}.webp\" alt=\"Student\" onerror=\"this.onerror=null; this.src='build/img/students/default.png'\">\r\n                  </div>\r\n          <div class=\"student-description\">\r\n              <h4><strong>${element.name}</strong></h4>\r\n              <p>${element.programme}</p>\r\n              <p>${element.co_advisor}</p>\r\n              <p>${element.graduation}</p>\r\n          </div>\r\n          `;\r\n          studentsGrid.appendChild(imagen);\r\n          studentsGrid.classList.remove(\"no-display\");\r\n        }\r\n      });\r\n      obj.forEach((element) => {\r\n        if (degrees.includes(element.degree) && element.graduated) {\r\n          const studentsGrid = document.querySelector(\r\n            `.accordion-student-${element.degree}-graduated`\r\n          );\r\n          const imagen = document.createElement(\"div\");\r\n          imagen.innerHTML = `\r\n            <div class=\"imagen\">\r\n                <img loading=\"lazy\" src=\"build/img/students/${element.name\r\n                  .split(\" \")\r\n                  .join(\"\")\r\n                  .replace(\r\n                    /,/g,\r\n                    \"\"\r\n                  )}.webp\" alt=\"Student\" onerror=\"this.onerror=null; this.src='build/img/students/default.png'\">\r\n                  </div>\r\n          <div class=\"student-description\">\r\n              <h4><strong>${element.name}</strong></h4>\r\n              <p>${element.programme}</p>\r\n              <p>${element.co_advisor}</p>\r\n              <p>${element.graduation}</p>\r\n          </div>\r\n          `;\r\n          studentsGrid.appendChild(imagen);\r\n          const blueBg = document.querySelector(\r\n            `.accordion-student-${element.degree}-graduated`\r\n          );\r\n          blueBg.classList.add(\"blueBg\");\r\n          studentsGrid.classList.remove(\"no-display\");\r\n        }\r\n      });\r\n    });\r\n}\r\n\r\n\r\nfunction displayResearchers() {\r\n  fetch(\"./researchers.json\")\r\n    .then((res2) => res2.json())\r\n    .then((data2) => (obj2 = data2))\r\n    .then(() => {\r\n      obj2.forEach((element2) => {\r\n          const researchersList = document.querySelector(\".collaboration-text\");\r\n          const list = document.createElement(\"p\");\r\n          list.innerHTML = `\r\n          <span> ${element2.name} </span> - ${element2.university}\r\n          `;\r\n          researchersList.appendChild(list);\r\n      });\r\n    });\r\n}\r\n"]}